description = "Job single"

[staticMenu mainMenu]
code = "main-menu"

[staticPage]

[localePicker]
forceUrl = 1
==
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>{{ record.title }} | Search It Recruitment</title>
        <meta name="description" content="{{ this.page.meta_description }}">
        <meta name="title" content="{{ this.page.meta_title }}">
        <meta name="author" content="Search It Recruitment">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="generator" content="Search It Recruitment">
        <link rel="icon" type="image/png" href="{{ 'assets/images/october.png'|theme }}">
        <link href="{{ 'assets/css/build.css'|theme }}" rel="stylesheet">
    </head>
    <body>
        <div class="wrapper">
        
            <!-- Header -->
            {% partial 'header' %}

            <!-- Content -->
            {% page %}

            <!-- Footer -->
            {% partial 'footer' %}

        </div>

        <!-- Scripts -->
        <script src="{{ 'assets/js/www/app.min.js'|theme }}"></script>
        
        {% if record.lat and record.lng %}
            <script defer async>
                function initMap() {
                    var job_map = document.getElementById('job_map');
                    var map = new google.maps.Map(job_map, {
                        center: {lat: {{ record.lat }}, lng: {{ record.lng }} },
                        zoom: 12,
                        scrollwheel: false,
                        draggable: false,
                    });
                    var marker = new google.maps.Marker({
                        map: map,
                        position: new google.maps.LatLng({{ record.lat }},{{ record.lng }})
                    });
                    map.set('styles', [{"featureType":"water","elementType":"geometry","stylers":[{"color":"#a0d6d1"},{"lightness":17}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":20}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#dedede"},{"lightness":17}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"color":"#dedede"},{"lightness":29},{"weight":0.2}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#dedede"},{"lightness":18}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":16}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#f1f1f1"},{"lightness":21}]},{"elementType":"labels.text.stroke","stylers":[{"visibility":"on"},{"color":"#ffffff"},{"lightness":16}]},{"elementType":"labels.text.fill","stylers":[{"saturation":36},{"color":"#333333"},{"lightness":40}]},{"elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"geometry","stylers":[{"color":"#f2f2f2"},{"lightness":19}]},{"featureType":"administrative","elementType":"geometry.fill","stylers":[{"color":"#fefefe"},{"lightness":20}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"color":"#fefefe"},{"lightness":17},{"weight":1.2}]}]);
                }
            </script>
            <script defer async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC9uFgeeO_Lyr254Ehof6gJPnL9iqQIT7w&callback=initMap"></script>
        {% endif %}
        
        <!-- OnRecruit code 2.0.1 jobdetail page -->
        <script type="text/javascript" src="//platform.linkedin.com/in.js">
            $(window).on('load', function() {
                api_key: 77dug7ogaz4ouh
                onLoad: OnLinkedInFrameworkLoad
                authorize: false
            });
        </script>
        <script type="text/javascript">

            var _onrecruit = _onrecruit || [];
            _onrecruit.push(['m', 90]);
            _onrecruit.push(['c', 'Search IT Recruitment']);
            (function() {
                var onrecruit = document.createElement('script'); onrecruit.type = 'text/javascript'; onrecruit.async = true;
                onrecruit.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'tracker.onrecruit.net/static/scripts/dtl.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(onrecruit, s);
            })();

          window.fbAsyncInit = function() {
            FB.init({
              appId      : '382574281913074',
              xfbml      : true,
              version    : 'v2.5'
            });
          };

          (function(d, s, id){
             var js, fjs = d.getElementsByTagName(s)[0];
             if (d.getElementById(id)) {return;}
             js = d.createElement(s); js.id = id;
             js.src = "//connect.facebook.net/en_US/sdk.js";
             fjs.parentNode.insertBefore(js, fjs);
           }(document, 'script', 'facebook-jssdk'));

          function myFacebookLogin() {
            FB.login(function(response){
              if (response.status === 'connected') {
                console.log('Logged in.');
                FB.api('/me', {fields: 'name, email, location, gender'}, function(response1){
                    // console.log(response1['name']);
                    $('.apply-form').find('input.name').val(response1['name']);
                    $('.apply-form').find('input.email').val(response1['email']);
                    $('.apply-form').find('input.address').val(response1['location']);
                    $('.apply-form').find('input.gender').val(response1['gender']);
                });
                FB.api('/me/picture',{"redirect": false, "height": 200, "width": 200, "type": "normal"}, function(response2){
                    // console.log(response2['data']['url']);
                    $('.apply-form').find('input.photo-url').val(response2['data']['url']);
                    if((response2['data']['url']).length){
                        $('.apply-form').find('#labelP').css('background-image', 'url('+response2['data']['url']+')');
                        $('.photoLabel').text('');
                        $('.apply-form').find('.photo-file').val('');
                    }
                });
              }
              else {
                FB.login();
              }
            }, {scope: 'publish_actions'} );
        }

        function liAuth(){
           IN.User.authorize(function(){
               onLinkedInLoad();
           });
        }

        function OnLinkedInFrameworkLoad() {
          IN.Event.on(IN, "auth", onLinkedInLoad);
        }
        // Setup an event listener to make an API call once auth is complete
        function onLinkedInLoad() {
            IN.API.Profile("me").result(getProfileData);
        }

        // Handle the successful return from the API call
        function onSuccess(data) {
            console.log(data);
            $('.apply-form').find('input.name').val(data['firstName']+' '+data['lastName']);
            $('.apply-form').find('input.photo-url').val(data['pictureUrl']);
            if((data['pictureUrl']).length){
                $('.apply-form').find('#labelP').css('background-image', 'url('+data['pictureUrl']+')');
                $('.photoLabel').text('');
                $('.apply-form').find('.photo-file').val('');
            }
        }

        // Handle an error response from the API call
        function onError(error) {
            console.log(error);
        }

        // Use the API call wrapper to request the member's basic profile data
        function getProfileData() {
            IN.API.Raw("/people/~:(first-name,last-name,picture-url)").result(onSuccess);
        }

        </script>
        <!-- end OnRecruit code -->

        {% framework extras %}

    </body>
</html>